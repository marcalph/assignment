2020-12-06 - INFO - baseline_mock.py/nonnested_search_baseline - started
2020-12-06 - INFO - print - LR parameters {'C': 0.1, 'l1_ratio': 0.25, 'penalty': 'elasticnet', 'solver': 'saga'}
2020-12-06 - INFO - print - val auc :  0.7754
2020-12-06 - INFO - print - CV results :  {'mean_fit_time': array([1.35157146, 1.57080293, 1.6368331 , 1.58862669, 1.69156921,
       1.43648479, 1.90422218, 1.9957552 , 1.81957235, 2.13740842,
       2.51066895, 3.25091414, 4.19639664, 6.89990487, 2.45584037,
       5.36543224, 7.56597457, 7.54780676, 7.55634518, 2.59709141,
       5.34163117, 7.35377107, 7.40601079, 7.61710968, 7.16568327,
       1.9577945 , 7.59255245, 8.23262391, 8.17869842, 7.76678848,
       1.98082726, 2.72877388, 2.74633179, 2.791291  , 3.05058234,
       0.2834115 , 0.79700046, 1.7863975 , 1.35803242, 1.22295539,
       1.23047068, 1.00600657]), 'std_fit_time': array([0.04356897, 0.08595849, 0.03836407, 0.11676464, 0.07120076,
       0.0493523 , 0.09428272, 0.11562419, 0.13359986, 0.07581107,
       0.04942882, 0.08761657, 0.09776159, 0.22564971, 0.0694971 ,
       0.08626644, 0.13390482, 0.12360535, 0.13094435, 0.06780723,
       0.0886267 , 0.14384704, 0.13610857, 0.27769692, 0.37814022,
       0.07714023, 0.15259515, 0.32696562, 0.2019542 , 0.11637861,
       0.0603718 , 0.09533289, 0.09905788, 0.13868486, 0.11618791,
       0.04473998, 0.10734667, 0.13072915, 0.21202509, 0.12295388,
       0.12316588, 0.21575427]), 'mean_score_time': array([0.00897827, 0.00745215, 0.00719419, 0.00693378, 0.00699978,
       0.00767894, 0.00772018, 0.00766675, 0.00743082, 0.00745549,
       0.00733619, 0.00726974, 0.00725546, 0.00721045, 0.00744276,
       0.00871398, 0.00875747, 0.00909898, 0.01032591, 0.00746522,
       0.00752978, 0.00834668, 0.01071346, 0.01135483, 0.00772853,
       0.00785599, 0.010027  , 0.00804608, 0.00811663, 0.00767782,
       0.00740635, 0.00749989, 0.00744858, 0.00778339, 0.009782  ,
       0.01015069, 0.01116629, 0.01370268, 0.01282206, 0.01378465,
       0.0131067 , 0.00831969]), 'std_score_time': array([0.00062164, 0.00064151, 0.00037931, 0.00017896, 0.00043289,
       0.00044073, 0.00059978, 0.00031078, 0.00016614, 0.00043794,
       0.00020666, 0.00016688, 0.0001727 , 0.00014503, 0.00042758,
       0.00358368, 0.0038078 , 0.00391422, 0.00550193, 0.00032019,
       0.00055332, 0.00348819, 0.00708685, 0.007793  , 0.00054568,
       0.00122756, 0.0071956 , 0.00079005, 0.00187774, 0.00026955,
       0.00033875, 0.00042039, 0.00041721, 0.00069509, 0.00150036,
       0.00124421, 0.00111401, 0.00200044, 0.00119498, 0.00118668,
       0.00081664, 0.00285408]), 'param_C': masked_array(data=[0.001, 0.001, 0.001, 0.001, 0.001, 0.01, 0.01, 0.01,
                   0.01, 0.01, 0.1, 0.1, 0.1, 0.1, 0.1, 1.0, 1.0, 1.0,
                   1.0, 1.0, 10.0, 10.0, 10.0, 10.0, 10.0, 100.0, 100.0,
                   100.0, 100.0, 100.0, 1000.0, 1000.0, 1000.0, 1000.0,
                   1000.0, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_l1_ratio': masked_array(data=[0.0, 0.25, 0.5, 0.75, 1.0, 0.0, 0.25, 0.5, 0.75, 1.0,
                   0.0, 0.25, 0.5, 0.75, 1.0, 0.0, 0.25, 0.5, 0.75, 1.0,
                   0.0, 0.25, 0.5, 0.75, 1.0, 0.0, 0.25, 0.5, 0.75, 1.0,
                   0.0, 0.25, 0.5, 0.75, 1.0, --, --, --, --, --, --, --],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False,  True,  True,  True,  True,  True,
                    True,  True],
       fill_value='?',
            dtype=object), 'param_penalty': masked_array(data=['elasticnet', 'elasticnet', 'elasticnet', 'elasticnet',
                   'elasticnet', 'elasticnet', 'elasticnet', 'elasticnet',
                   'elasticnet', 'elasticnet', 'elasticnet', 'elasticnet',
                   'elasticnet', 'elasticnet', 'elasticnet', 'elasticnet',
                   'elasticnet', 'elasticnet', 'elasticnet', 'elasticnet',
                   'elasticnet', 'elasticnet', 'elasticnet', 'elasticnet',
                   'elasticnet', 'elasticnet', 'elasticnet', 'elasticnet',
                   'elasticnet', 'elasticnet', 'elasticnet', 'elasticnet',
                   'elasticnet', 'elasticnet', 'elasticnet', --, --, --,
                   --, --, --, --],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False,  True,  True,  True,  True,  True,
                    True,  True],
       fill_value='?',
            dtype=object), 'param_solver': masked_array(data=['saga', 'saga', 'saga', 'saga', 'saga', 'saga', 'saga',
                   'saga', 'saga', 'saga', 'saga', 'saga', 'saga', 'saga',
                   'saga', 'saga', 'saga', 'saga', 'saga', 'saga', 'saga',
                   'saga', 'saga', 'saga', 'saga', 'saga', 'saga', 'saga',
                   'saga', 'saga', 'saga', 'saga', 'saga', 'saga', 'saga',
                   --, --, --, --, --, --, --],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False,  True,  True,  True,  True,  True,
                    True,  True],
       fill_value='?',
            dtype=object), 'params': [{'C': 0.001, 'l1_ratio': 0.0, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.001, 'l1_ratio': 0.25, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.001, 'l1_ratio': 0.5, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.001, 'l1_ratio': 0.75, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.001, 'l1_ratio': 1.0, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.01, 'l1_ratio': 0.0, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.01, 'l1_ratio': 0.25, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.01, 'l1_ratio': 0.5, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.01, 'l1_ratio': 0.75, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.01, 'l1_ratio': 1.0, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.1, 'l1_ratio': 0.0, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.1, 'l1_ratio': 0.25, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.1, 'l1_ratio': 0.5, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.1, 'l1_ratio': 0.75, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.1, 'l1_ratio': 1.0, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 1.0, 'l1_ratio': 0.0, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 1.0, 'l1_ratio': 0.25, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 1.0, 'l1_ratio': 0.5, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 1.0, 'l1_ratio': 0.75, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 1.0, 'l1_ratio': 1.0, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 10.0, 'l1_ratio': 0.0, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 10.0, 'l1_ratio': 0.25, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 10.0, 'l1_ratio': 0.5, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 10.0, 'l1_ratio': 0.75, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 10.0, 'l1_ratio': 1.0, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 100.0, 'l1_ratio': 0.0, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 100.0, 'l1_ratio': 0.25, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 100.0, 'l1_ratio': 0.5, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 100.0, 'l1_ratio': 0.75, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 100.0, 'l1_ratio': 1.0, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 1000.0, 'l1_ratio': 0.0, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 1000.0, 'l1_ratio': 0.25, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 1000.0, 'l1_ratio': 0.5, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 1000.0, 'l1_ratio': 0.75, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 1000.0, 'l1_ratio': 1.0, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.001}, {'C': 0.01}, {'C': 0.1}, {'C': 1.0}, {'C': 10.0}, {'C': 100.0}, {'C': 1000.0}], 'split0_test_score': array([0.77257626, 0.76635578, 0.76004027, 0.74576478, 0.72011345,
       0.78024941, 0.7794572 , 0.77817608, 0.77647702, 0.7747724 ,
       0.78061506, 0.78072809, 0.78080238, 0.78085211, 0.78080857,
       0.7805217 , 0.78053418, 0.78054468, 0.78055797, 0.78057646,
       0.78049575, 0.78049782, 0.78049881, 0.78050141, 0.78050069,
       0.78049369, 0.7804918 , 0.7804918 , 0.78049225, 0.78049243,
       0.78049117, 0.78048992, 0.78049351, 0.78049082, 0.78049477,
       0.77257527, 0.78024968, 0.78061713, 0.78051883, 0.78049557,
       0.78049602, 0.78050042]), 'split1_test_score': array([0.75889226, 0.74940744, 0.74084832, 0.72773783, 0.70178541,
       0.76491183, 0.76373059, 0.76199374, 0.75967864, 0.75697641,
       0.76565867, 0.76568233, 0.76566108, 0.76559202, 0.76549566,
       0.76567974, 0.76568611, 0.76568048, 0.7656778 , 0.76566935,
       0.76567549, 0.76567715, 0.7656778 , 0.76567623, 0.76567586,
       0.76567826, 0.76567854, 0.76567817, 0.76567817, 0.76567826,
       0.76567761, 0.76567577, 0.76567789, 0.76567817, 0.76567854,
       0.75889272, 0.76491414, 0.76565877, 0.7656778 , 0.76567226,
       0.76567604, 0.76567475]), 'split2_test_score': array([0.76764651, 0.76040282, 0.75381958, 0.73962491, 0.71542254,
       0.77565169, 0.7750456 , 0.77370783, 0.77205524, 0.77003196,
       0.77636682, 0.77642941, 0.77645899, 0.77649535, 0.77649001,
       0.77632367, 0.77633498, 0.77634737, 0.7763565 , 0.77636853,
       0.77631942, 0.77632105, 0.77632177, 0.77632295, 0.77632476,
       0.77631734, 0.77632005, 0.77631888, 0.77632014, 0.77632132,
       0.77632014, 0.77632213, 0.77632249, 0.77631851, 0.77631897,
       0.76764823, 0.7756535 , 0.77636085, 0.77632566, 0.77632313,
       0.77631444, 0.77631897]), 'split3_test_score': array([0.77673056, 0.76817937, 0.75979596, 0.7433539 , 0.7226621 ,
       0.78428695, 0.7827304 , 0.78098824, 0.77853305, 0.77593658,
       0.78534017, 0.78528077, 0.78519833, 0.78511597, 0.78496669,
       0.78541536, 0.78539417, 0.78539203, 0.78539389, 0.78538832,
       0.7854096 , 0.78541155, 0.78540969, 0.7854096 , 0.78540784,
       0.78540718, 0.78540737, 0.78540681, 0.78540728, 0.78540644,
       0.78540551, 0.78540607, 0.78540626, 0.78540551, 0.78540607,
       0.77672703, 0.78428779, 0.785341  , 0.78541406, 0.78541304,
       0.78540774, 0.78540784]), 'split4_test_score': array([0.76412221, 0.7553975 , 0.74667002, 0.7306998 , 0.70944463,
       0.76942262, 0.76826066, 0.76681127, 0.76521129, 0.76344994,
       0.76991646, 0.76988407, 0.76984372, 0.76985263, 0.76981879,
       0.7698671 , 0.76986364, 0.76985427, 0.7698631 , 0.76985318,
       0.76985614, 0.76985368, 0.76985532, 0.7698565 , 0.76985377,
       0.76985523, 0.76985596, 0.76985641, 0.7698565 , 0.76985677,
       0.76985596, 0.76985509, 0.76985632, 0.76985204, 0.76985887,
       0.76412198, 0.7694244 , 0.76991214, 0.76986478, 0.76985259,
       0.76985623, 0.76985241]), 'split5_test_score': array([0.76939603, 0.75933969, 0.74923369, 0.73027467, 0.70682042,
       0.77646038, 0.77465223, 0.77298759, 0.77074208, 0.76817155,
       0.77744756, 0.77737981, 0.77723803, 0.77711636, 0.77700563,
       0.77751057, 0.77750695, 0.77748743, 0.77747473, 0.77746944,
       0.77752033, 0.77751572, 0.77751464, 0.7775122 , 0.77751355,
       0.77752232, 0.77752205, 0.77752133, 0.77752051, 0.77751952,
       0.7775225 , 0.77752232, 0.77752268, 0.7775235 , 0.77752268,
       0.76939756, 0.776462  , 0.77745227, 0.77751229, 0.77751527,
       0.77752304, 0.77752105]), 'split6_test_score': array([0.76077762, 0.75448262, 0.74763508, 0.73526613, 0.7091829 ,
       0.76833191, 0.76656719, 0.76479766, 0.76320837, 0.76134621,
       0.76965369, 0.76959177, 0.76946434, 0.76927559, 0.76907614,
       0.76974277, 0.76974286, 0.76973612, 0.76973694, 0.76974149,
       0.76974877, 0.76974786, 0.76974686, 0.76974777, 0.76974741,
       0.76974786, 0.76974932, 0.76975032, 0.76975023, 0.76974986,
       0.76974859, 0.76975095, 0.76975032, 0.76974804, 0.76975041,
       0.76077844, 0.76833081, 0.76965141, 0.76974595, 0.76974941,
       0.76975159, 0.76974868]), 'split7_test_score': array([0.77542045, 0.76900368, 0.76146964, 0.7489539 , 0.72385673,
       0.77971905, 0.7795635 , 0.7790463 , 0.77775916, 0.77590712,
       0.77902685, 0.77913767, 0.77921248, 0.77929294, 0.77934707,
       0.77876268, 0.77877427, 0.77880367, 0.77882302, 0.77882859,
       0.77873539, 0.77873557, 0.77874041, 0.77874123, 0.77873922,
       0.77873502, 0.77873529, 0.77873529, 0.77873466, 0.77873447,
       0.7787331 , 0.77873283, 0.77873776, 0.77873466, 0.77873429,
       0.77541808, 0.77972252, 0.77903132, 0.77876368, 0.77873557,
       0.77873648, 0.77873438]), 'split8_test_score': array([0.77579955, 0.76814911, 0.76205935, 0.74731609, 0.72402628,
       0.7834289 , 0.78233794, 0.78077889, 0.77894563, 0.77645482,
       0.78398621, 0.78404946, 0.78410398, 0.78413494, 0.78409261,
       0.78391807, 0.78392264, 0.78393835, 0.78395123, 0.78396776,
       0.78391259, 0.78390903, 0.78390876, 0.78390985, 0.78391214,
       0.78391287, 0.78391278, 0.78391305, 0.78391369, 0.78391406,
       0.78391606, 0.78391606, 0.78391342, 0.78391479, 0.78390995,
       0.77579864, 0.78342817, 0.78397918, 0.78391588, 0.78390775,
       0.78391095, 0.78391049]), 'split9_test_score': array([0.75808111, 0.75063849, 0.74229231, 0.727243  , 0.70602259,
       0.76531244, 0.76478507, 0.76344521, 0.76139087, 0.75943656,
       0.76561552, 0.76569182, 0.76575129, 0.76581178, 0.76585821,
       0.76546384, 0.76547651, 0.76547956, 0.76548012, 0.76547013,
       0.76543952, 0.76544164, 0.76544183, 0.76544312, 0.76544118,
       0.76543415, 0.76543535, 0.76543526, 0.76543545, 0.76543563,
       0.76543572, 0.76544035, 0.76543646, 0.76543138, 0.76543175,
       0.75808249, 0.76531022, 0.7656157 , 0.76545496, 0.76543637,
       0.76543406, 0.76543841]), 'mean_test_score': array([0.76794425, 0.76013565, 0.75238642, 0.7376235 , 0.71393371,
       0.77477752, 0.77371304, 0.77227328, 0.77040013, 0.76824835,
       0.7753627 , 0.77538552, 0.77537346, 0.77535397, 0.77529594,
       0.77532055, 0.77532363, 0.7753264 , 0.77533153, 0.77533332,
       0.7753113 , 0.77531111, 0.77531159, 0.77531209, 0.77531164,
       0.77531039, 0.77531085, 0.77531073, 0.77531089, 0.77531088,
       0.77531064, 0.77531115, 0.77531171, 0.77530974, 0.77531063,
       0.76794404, 0.77477832, 0.77536198, 0.77531939, 0.7753101 ,
       0.77531066, 0.77531074]), 'std_test_score': array([0.0068091 , 0.00711794, 0.00769297, 0.00799018, 0.00787658,
       0.00693089, 0.00696945, 0.00707745, 0.00712652, 0.00711499,
       0.00686814, 0.00687475, 0.00688497, 0.00690012, 0.00689823,
       0.00686642, 0.00686301, 0.00686816, 0.00687131, 0.00687731,
       0.00686628, 0.0068659 , 0.00686571, 0.00686588, 0.0068664 ,
       0.00686635, 0.00686588, 0.00686574, 0.00686586, 0.00686574,
       0.00686601, 0.00686548, 0.00686593, 0.00686682, 0.00686571,
       0.00680791, 0.00693119, 0.00686832, 0.00686734, 0.00686721,
       0.00686636, 0.00686665]), 'rank_test_score': array([37, 39, 40, 41, 42, 32, 33, 34, 35, 36,  3,  1,  2,  5, 30, 10,  9,
        8,  7,  6, 16, 18, 15, 12, 14, 27, 21, 23, 19, 20, 25, 17, 13, 29,
       26, 38, 31,  4, 11, 28, 24, 22], dtype=int32), 'split0_train_score': array([0.767418  , 0.75876131, 0.75124837, 0.73686856, 0.71276282,
       0.77503417, 0.77372689, 0.77200863, 0.77002461, 0.76762283,
       0.77608639, 0.77606598, 0.77601869, 0.77594127, 0.77584251,
       0.77613431, 0.77613667, 0.77613498, 0.77613212, 0.77612997,
       0.77614019, 0.77614066, 0.77614196, 0.77614247, 0.77614104,
       0.77614057, 0.77613974, 0.77614001, 0.7761401 , 0.77614016,
       0.77613978, 0.77614073, 0.77614063, 0.77614034, 0.77614072,
       0.76741804, 0.77503479, 0.77608823, 0.77613585, 0.77614081,
       0.77614216, 0.77614115]), 'split1_train_score': array([0.7714884 , 0.76349543, 0.75617232, 0.74345791, 0.71699856,
       0.77892787, 0.7776687 , 0.77603871, 0.77395682, 0.77148581,
       0.77992724, 0.7798966 , 0.77986541, 0.779819  , 0.77974613,
       0.7799696 , 0.77997375, 0.77997584, 0.77997611, 0.77997319,
       0.77997862, 0.77997701, 0.77997635, 0.77997583, 0.77997629,
       0.77997949, 0.77997962, 0.77997971, 0.77997937, 0.77997955,
       0.77997901, 0.77997894, 0.77997855, 0.77997961, 0.77997973,
       0.77148836, 0.77892749, 0.77992842, 0.77997247, 0.77997632,
       0.77997763, 0.77997817]), 'split2_train_score': array([0.76870331, 0.76027773, 0.75228582, 0.73784946, 0.71364733,
       0.77605338, 0.77481115, 0.7731505 , 0.77120233, 0.76895713,
       0.77703125, 0.77701458, 0.77698753, 0.77691662, 0.7768395 ,
       0.77707246, 0.7770718 , 0.77707517, 0.77707498, 0.77707417,
       0.77707262, 0.77707309, 0.77707226, 0.77707421, 0.77707369,
       0.77707078, 0.77707204, 0.77707214, 0.77707224, 0.77707187,
       0.7770708 , 0.77707402, 0.77707252, 0.77707247, 0.77707208,
       0.76870423, 0.77605235, 0.77703154, 0.77707292, 0.77707244,
       0.77707299, 0.77707263]), 'split3_train_score': array([0.76676278, 0.75844012, 0.75067157, 0.73637977, 0.71188873,
       0.7740501 , 0.77289352, 0.77130101, 0.76925378, 0.76704478,
       0.77498545, 0.77498296, 0.77494808, 0.77488092, 0.77477786,
       0.77501962, 0.77502354, 0.77502012, 0.77501699, 0.77501746,
       0.77502346, 0.7750239 , 0.7750258 , 0.77502618, 0.77502652,
       0.77502475, 0.7750245 , 0.7750243 , 0.77502411, 0.77502351,
       0.77502383, 0.7750236 , 0.77502429, 0.77502342, 0.77502463,
       0.76676047, 0.77404909, 0.77498465, 0.7750168 , 0.77502418,
       0.77502321, 0.77502497]), 'split4_train_score': array([0.77065713, 0.76215688, 0.75475358, 0.74046357, 0.71755334,
       0.77807413, 0.77681245, 0.77526644, 0.77332454, 0.7708555 ,
       0.77902424, 0.77901512, 0.77896567, 0.77889252, 0.77880401,
       0.77905906, 0.77906105, 0.77906313, 0.77906397, 0.77906578,
       0.77905366, 0.77905376, 0.7790549 , 0.77905495, 0.77905581,
       0.7790537 , 0.77905398, 0.77905381, 0.77905376, 0.77905332,
       0.77905302, 0.77905325, 0.77905402, 0.77905321, 0.77905449,
       0.77065783, 0.77807131, 0.7790253 , 0.77905678, 0.77905291,
       0.779054  , 0.77905422]), 'split5_train_score': array([0.76871192, 0.76037302, 0.75278135, 0.73741252, 0.71583357,
       0.77598931, 0.77486211, 0.77339043, 0.77131446, 0.76891487,
       0.77699699, 0.77698077, 0.77693763, 0.77687085, 0.77678944,
       0.77703108, 0.77703477, 0.77703834, 0.77704076, 0.77704041,
       0.77703719, 0.77703756, 0.777038  , 0.77703837, 0.77703836,
       0.77703698, 0.77703743, 0.77703742, 0.77703754, 0.77703728,
       0.77703758, 0.77703715, 0.77703793, 0.77703719, 0.77703758,
       0.76871243, 0.77598987, 0.77699668, 0.77703263, 0.77703723,
       0.77703793, 0.77703668]), 'split6_train_score': array([0.77088616, 0.76263821, 0.75540822, 0.74078078, 0.7152055 ,
       0.77800841, 0.77689766, 0.77546531, 0.77367611, 0.77138957,
       0.77884153, 0.77883041, 0.77878675, 0.77874233, 0.77868156,
       0.77884625, 0.77885099, 0.77884714, 0.77884888, 0.77885016,
       0.77884606, 0.77884626, 0.7788457 , 0.77884512, 0.77884602,
       0.77884714, 0.7788479 , 0.77884816, 0.77884802, 0.7788479 ,
       0.77884736, 0.77884791, 0.77884778, 0.77884755, 0.77884802,
       0.77088587, 0.77800946, 0.77884167, 0.77885816, 0.77884597,
       0.77884746, 0.77884777]), 'split7_train_score': array([0.76754619, 0.7589187 , 0.75105469, 0.73728908, 0.71152211,
       0.77555668, 0.77428669, 0.77250649, 0.77036435, 0.76779735,
       0.77667362, 0.77664934, 0.77661036, 0.77655014, 0.7764684 ,
       0.77672304, 0.77672783, 0.77672756, 0.77673143, 0.77673263,
       0.77672578, 0.77672535, 0.77672593, 0.7767255 , 0.77672482,
       0.77672755, 0.77672774, 0.77672764, 0.77672747, 0.77672754,
       0.77672695, 0.77672742, 0.77672782, 0.77672872, 0.77672806,
       0.76754633, 0.77555375, 0.77667426, 0.77672262, 0.77672597,
       0.77672634, 0.77672673]), 'split8_train_score': array([0.76698434, 0.75884369, 0.75131507, 0.73696097, 0.71149131,
       0.77424729, 0.7728735 , 0.77133996, 0.76934343, 0.76694723,
       0.77522154, 0.77522056, 0.7751561 , 0.77509713, 0.77500039,
       0.775264  , 0.77526333, 0.77526724, 0.77526641, 0.77526881,
       0.77526384, 0.7752644 , 0.77526295, 0.77526362, 0.77526423,
       0.77526644, 0.77526541, 0.77526566, 0.77526549, 0.77526551,
       0.77526575, 0.77526358, 0.77526557, 0.77526475, 0.77526038,
       0.76698269, 0.77424699, 0.77522316, 0.77526303, 0.77526415,
       0.77526496, 0.7752641 ]), 'split9_train_score': array([0.77093013, 0.76265053, 0.7550179 , 0.73999498, 0.7159503 ,
       0.77856071, 0.77726039, 0.77543414, 0.7734791 , 0.77119289,
       0.7796754 , 0.7796531 , 0.77960847, 0.77953417, 0.77943042,
       0.77971884, 0.77972239, 0.77972156, 0.77972338, 0.77972305,
       0.77971999, 0.77971953, 0.7797188 , 0.7797193 , 0.77972006,
       0.77971954, 0.77971927, 0.77971932, 0.77971934, 0.77971932,
       0.77971942, 0.77971926, 0.77971946, 0.77971902, 0.77971935,
       0.77093048, 0.7785586 , 0.77967411, 0.77971691, 0.77972079,
       0.77972099, 0.77972028]), 'mean_train_score': array([0.76900884, 0.76065556, 0.75307089, 0.73874576, 0.71428536,
       0.7764502 , 0.77520931, 0.77359016, 0.77159395, 0.7692208 ,
       0.77744636, 0.77743094, 0.77738847, 0.7773245 , 0.77723802,
       0.77748383, 0.77748661, 0.77748711, 0.7774875 , 0.77748756,
       0.77748614, 0.77748615, 0.77748627, 0.77748655, 0.77748668,
       0.77748669, 0.77748676, 0.77748682, 0.77748674, 0.7774866 ,
       0.77748635, 0.77748659, 0.77748686, 0.77748663, 0.7774865 ,
       0.76900867, 0.77644937, 0.7774468 , 0.77748482, 0.77748608,
       0.77748677, 0.77748667]), 'std_train_score': array([0.00173424, 0.00182341, 0.00196547, 0.00218785, 0.00219016,
       0.00171595, 0.00172693, 0.00173015, 0.00176677, 0.00176188,
       0.00171425, 0.00170921, 0.00171147, 0.00171439, 0.00172025,
       0.00171132, 0.00171199, 0.00171202, 0.00171307, 0.00171264,
       0.00171099, 0.00171054, 0.0017102 , 0.00170994, 0.00171028,
       0.00171056, 0.00171082, 0.00171082, 0.0017108 , 0.00171087,
       0.00171073, 0.00171091, 0.00171059, 0.00171083, 0.00171144,
       0.00173476, 0.00171576, 0.00171409, 0.0017126 , 0.00171048,
       0.0017108 , 0.00171079])}
2020-12-06 - INFO - baseline_mock.py/nonnested_search_baseline - ended in 136.1 sec
2020-12-06 - INFO - baseline_mock.py/nonnested_search_baseline - started
2020-12-06 - INFO - print - LR parameters {'C': 0.1, 'l1_ratio': 0.25, 'penalty': 'elasticnet', 'solver': 'saga'}
2020-12-06 - INFO - print - val auc :  0.7733
2020-12-06 - INFO - print - CV results :  {'mean_fit_time': array([0.53188527, 0.66338868, 0.65684595, 0.70030446, 0.41131856,
       0.57104146, 0.78474574, 0.76125126, 0.75081012, 0.74715798,
       1.08007433, 1.2057164 , 1.36835632, 2.00176952, 0.89401326,
       2.73291297, 3.61806405, 3.27279637, 3.48705657, 0.84059844,
       1.11988752, 3.60383251, 3.55171804, 2.96070948, 1.99048293,
       0.59076319, 3.51383653, 3.47382679, 3.67364688, 3.67308717,
       0.61457505, 0.85514832, 0.87591014, 0.84840591, 0.89173753,
       0.14787302, 0.45183442, 0.68797181, 0.49787242, 0.49699798,
       0.4954267 , 0.51258981]), 'std_fit_time': array([0.04031538, 0.04223347, 0.03106606, 0.04826924, 0.05222396,
       0.04359585, 0.04694911, 0.04809996, 0.02997838, 0.03715641,
       0.05514618, 0.08445378, 0.21881373, 0.34316485, 0.05130414,
       0.07472423, 0.33968449, 0.61050386, 0.32610129, 0.02774203,
       0.82176592, 0.03559889, 0.03409226, 0.47347659, 0.30133267,
       0.03583572, 0.07016793, 0.09138953, 0.14586449, 0.07916942,
       0.03417905, 0.03020206, 0.04801126, 0.02525484, 0.05590923,
       0.02249296, 0.02098436, 0.03609182, 0.02337007, 0.02508032,
       0.03690072, 0.07364529]), 'mean_score_time': array([0.00593514, 0.00553412, 0.00463948, 0.00458543, 0.00421066,
       0.00413227, 0.00458734, 0.00497911, 0.00476241, 0.00394375,
       0.00433712, 0.00399265, 0.00441828, 0.00386255, 0.00573061,
       0.00468862, 0.00434816, 0.00432858, 0.0050374 , 0.00465581,
       0.00402818, 0.00407205, 0.00411739, 0.00386839, 0.00516784,
       0.0042594 , 0.00421541, 0.00395727, 0.00539277, 0.00556419,
       0.00537844, 0.00412714, 0.00405869, 0.00404103, 0.00436461,
       0.00656016, 0.01048119, 0.00998313, 0.00969856, 0.00991974,
       0.00991313, 0.00944617]), 'std_score_time': array([1.68872238e-03, 1.30201618e-03, 1.38553759e-03, 1.40279925e-03,
       1.12345886e-03, 2.20520096e-04, 1.11455711e-03, 1.24698101e-03,
       1.33956555e-03, 1.32308824e-04, 1.03038078e-03, 7.22830872e-05,
       1.04406451e-03, 2.17571031e-04, 1.55565702e-03, 1.21888002e-03,
       8.57214937e-04, 9.60586438e-04, 1.46809889e-03, 1.20292772e-03,
       4.58748501e-04, 4.89974650e-04, 5.57628052e-04, 1.16700856e-04,
       1.32334990e-03, 8.68361653e-04, 8.94525234e-04, 2.32421921e-04,
       1.27427159e-03, 1.43307349e-03, 1.47131017e-03, 2.44713212e-04,
       1.66468701e-04, 2.14435002e-04, 9.31597027e-04, 1.94454044e-03,
       8.70550312e-04, 3.35404729e-04, 4.81150538e-04, 6.08900777e-04,
       6.36519473e-04, 1.71769132e-03]), 'param_C': masked_array(data=[0.001, 0.001, 0.001, 0.001, 0.001, 0.01, 0.01, 0.01,
                   0.01, 0.01, 0.1, 0.1, 0.1, 0.1, 0.1, 1.0, 1.0, 1.0,
                   1.0, 1.0, 10.0, 10.0, 10.0, 10.0, 10.0, 100.0, 100.0,
                   100.0, 100.0, 100.0, 1000.0, 1000.0, 1000.0, 1000.0,
                   1000.0, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_l1_ratio': masked_array(data=[0.0, 0.25, 0.5, 0.75, 1.0, 0.0, 0.25, 0.5, 0.75, 1.0,
                   0.0, 0.25, 0.5, 0.75, 1.0, 0.0, 0.25, 0.5, 0.75, 1.0,
                   0.0, 0.25, 0.5, 0.75, 1.0, 0.0, 0.25, 0.5, 0.75, 1.0,
                   0.0, 0.25, 0.5, 0.75, 1.0, --, --, --, --, --, --, --],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False,  True,  True,  True,  True,  True,
                    True,  True],
       fill_value='?',
            dtype=object), 'param_penalty': masked_array(data=['elasticnet', 'elasticnet', 'elasticnet', 'elasticnet',
                   'elasticnet', 'elasticnet', 'elasticnet', 'elasticnet',
                   'elasticnet', 'elasticnet', 'elasticnet', 'elasticnet',
                   'elasticnet', 'elasticnet', 'elasticnet', 'elasticnet',
                   'elasticnet', 'elasticnet', 'elasticnet', 'elasticnet',
                   'elasticnet', 'elasticnet', 'elasticnet', 'elasticnet',
                   'elasticnet', 'elasticnet', 'elasticnet', 'elasticnet',
                   'elasticnet', 'elasticnet', 'elasticnet', 'elasticnet',
                   'elasticnet', 'elasticnet', 'elasticnet', --, --, --,
                   --, --, --, --],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False,  True,  True,  True,  True,  True,
                    True,  True],
       fill_value='?',
            dtype=object), 'param_solver': masked_array(data=['saga', 'saga', 'saga', 'saga', 'saga', 'saga', 'saga',
                   'saga', 'saga', 'saga', 'saga', 'saga', 'saga', 'saga',
                   'saga', 'saga', 'saga', 'saga', 'saga', 'saga', 'saga',
                   'saga', 'saga', 'saga', 'saga', 'saga', 'saga', 'saga',
                   'saga', 'saga', 'saga', 'saga', 'saga', 'saga', 'saga',
                   --, --, --, --, --, --, --],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False,  True,  True,  True,  True,  True,
                    True,  True],
       fill_value='?',
            dtype=object), 'params': [{'C': 0.001, 'l1_ratio': 0.0, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.001, 'l1_ratio': 0.25, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.001, 'l1_ratio': 0.5, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.001, 'l1_ratio': 0.75, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.001, 'l1_ratio': 1.0, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.01, 'l1_ratio': 0.0, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.01, 'l1_ratio': 0.25, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.01, 'l1_ratio': 0.5, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.01, 'l1_ratio': 0.75, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.01, 'l1_ratio': 1.0, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.1, 'l1_ratio': 0.0, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.1, 'l1_ratio': 0.25, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.1, 'l1_ratio': 0.5, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.1, 'l1_ratio': 0.75, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.1, 'l1_ratio': 1.0, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 1.0, 'l1_ratio': 0.0, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 1.0, 'l1_ratio': 0.25, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 1.0, 'l1_ratio': 0.5, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 1.0, 'l1_ratio': 0.75, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 1.0, 'l1_ratio': 1.0, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 10.0, 'l1_ratio': 0.0, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 10.0, 'l1_ratio': 0.25, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 10.0, 'l1_ratio': 0.5, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 10.0, 'l1_ratio': 0.75, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 10.0, 'l1_ratio': 1.0, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 100.0, 'l1_ratio': 0.0, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 100.0, 'l1_ratio': 0.25, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 100.0, 'l1_ratio': 0.5, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 100.0, 'l1_ratio': 0.75, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 100.0, 'l1_ratio': 1.0, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 1000.0, 'l1_ratio': 0.0, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 1000.0, 'l1_ratio': 0.25, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 1000.0, 'l1_ratio': 0.5, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 1000.0, 'l1_ratio': 0.75, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 1000.0, 'l1_ratio': 1.0, 'penalty': 'elasticnet', 'solver': 'saga'}, {'C': 0.001}, {'C': 0.01}, {'C': 0.1}, {'C': 1.0}, {'C': 10.0}, {'C': 100.0}, {'C': 1000.0}], 'split0_test_score': array([0.76784777, 0.75781971, 0.73492611, 0.69552761, 0.5       ,
       0.77781079, 0.77612174, 0.77338799, 0.77106796, 0.76942578,
       0.77872029, 0.77882892, 0.77896632, 0.77888907, 0.77867909,
       0.7785254 , 0.7785534 , 0.77856579, 0.77858465, 0.77860098,
       0.77849972, 0.77850071, 0.77850196, 0.77850654, 0.77850825,
       0.77849209, 0.77848796, 0.77848832, 0.77848949, 0.7784902 ,
       0.77849218, 0.77848967, 0.7784876 , 0.77848868, 0.77848877,
       0.76784768, 0.7778046 , 0.77871509, 0.7785315 , 0.7784999 ,
       0.77849353, 0.77849083]), 'split1_test_score': array([0.75443927, 0.74121985, 0.71179221, 0.69061672, 0.5       ,
       0.76186975, 0.75949309, 0.75649466, 0.7535574 , 0.75205355,
       0.76300342, 0.76292937, 0.76283472, 0.76265753, 0.7624309 ,
       0.76293949, 0.76294235, 0.76294591, 0.76292799, 0.7629133 ,
       0.76293228, 0.76292766, 0.76292859, 0.762926  , 0.76292581,
       0.76291648, 0.76291713, 0.76291741, 0.76291621, 0.7629151 ,
       0.76291704, 0.76291759, 0.76291565, 0.76291916, 0.76291796,
       0.75444065, 0.76187022, 0.76300933, 0.76293478, 0.76292868,
       0.76292193, 0.76291732]), 'split2_test_score': array([0.76282088, 0.75180851, 0.72184712, 0.68881297, 0.5       ,
       0.77348396, 0.77191494, 0.76937965, 0.76726009, 0.76633022,
       0.77435982, 0.77447488, 0.77452332, 0.77448488, 0.77441866,
       0.774271  , 0.77426322, 0.77427715, 0.77428176, 0.7742985 ,
       0.77425589, 0.77425951, 0.77425815, 0.7742606 , 0.77426394,
       0.77424875, 0.77424694, 0.77424902, 0.7742492 , 0.77424938,
       0.77424558, 0.77424929, 0.77424956, 0.77424802, 0.77424847,
       0.7628197 , 0.77348079, 0.77436227, 0.77427172, 0.77425797,
       0.77425291, 0.77425146]), 'split3_test_score': array([0.7723316 , 0.76031183, 0.73061474, 0.69803382, 0.5       ,
       0.7818985 , 0.77924654, 0.77557426, 0.77277186, 0.77128   ,
       0.78348256, 0.78342948, 0.78327783, 0.78308194, 0.78273923,
       0.78352996, 0.78354009, 0.7835321 , 0.78354074, 0.7835373 ,
       0.78351918, 0.7835136 , 0.78351481, 0.78351574, 0.78352132,
       0.78352067, 0.78351927, 0.78352011, 0.78352011, 0.78352095,
       0.78351937, 0.78351992, 0.7835189 , 0.78351844, 0.78351899,
       0.77232853, 0.78189664, 0.78348051, 0.78353572, 0.78351974,
       0.78351871, 0.78351983]), 'split4_test_score': array([0.76036094, 0.74575518, 0.71622115, 0.70057266, 0.5       ,
       0.76737057, 0.76502049, 0.76244653, 0.75983849, 0.7581457 ,
       0.76810803, 0.7680235 , 0.76797951, 0.76783752, 0.76764162,
       0.76800767, 0.76799839, 0.76798674, 0.76798629, 0.76797164,
       0.76798856, 0.76799138, 0.76798884, 0.76798601, 0.76798702,
       0.76798702, 0.76798419, 0.76798347, 0.76798274, 0.76798347,
       0.76798765, 0.76798538, 0.76798747, 0.76798483, 0.76798583,
       0.76036113, 0.76737048, 0.76810011, 0.7680013 , 0.76799648,
       0.76798483, 0.76798874]), 'split5_test_score': array([0.76493763, 0.74871167, 0.71146345, 0.69728905, 0.5       ,
       0.7742018 , 0.77118907, 0.76773089, 0.76431839, 0.76206307,
       0.7759257 , 0.77572304, 0.7754321 , 0.77508364, 0.77475519,
       0.77601383, 0.77599313, 0.77598337, 0.7759671 , 0.77592769,
       0.77603182, 0.77602992, 0.77602793, 0.7760292 , 0.77602884,
       0.77603291, 0.77603254, 0.77603227, 0.77603065, 0.77603055,
       0.77603137, 0.77603074, 0.776032  , 0.77603173, 0.77603101,
       0.76493763, 0.77420352, 0.77592669, 0.77601392, 0.77603245,
       0.77602685, 0.77602486]), 'split6_test_score': array([0.75633577, 0.74595968, 0.71835609, 0.70042203, 0.5       ,
       0.76588051, 0.76278173, 0.7601625 , 0.75819425, 0.75726312,
       0.76758963, 0.76749536, 0.76728409, 0.76695958, 0.76659171,
       0.76772219, 0.76771337, 0.76768116, 0.76767898, 0.76766442,
       0.76773839, 0.76773812, 0.76773666, 0.76773047, 0.76773057,
       0.76773775, 0.76773557, 0.76773584, 0.7677363 , 0.76773794,
       0.76773675, 0.76773566, 0.76773712, 0.7677383 , 0.76773402,
       0.75633486, 0.76587923, 0.76758981, 0.76772065, 0.76774057,
       0.76774048, 0.76774103]), 'split7_test_score': array([0.77138511, 0.7603643 , 0.73460004, 0.69814299, 0.5       ,
       0.77759773, 0.77680206, 0.77484486, 0.77244271, 0.7707433 ,
       0.7768713 , 0.77696829, 0.77701096, 0.7770462 , 0.77709567,
       0.7764378 , 0.77645322, 0.77647687, 0.7764964 , 0.77651219,
       0.77637362, 0.77638111, 0.77638038, 0.77638074, 0.77638202,
       0.77636422, 0.7763655 , 0.7763666 , 0.77636641, 0.77636641,
       0.7763665 , 0.77637006, 0.77636568, 0.77636687, 0.77636705,
       0.77138429, 0.77759645, 0.7768734 , 0.77643807, 0.7763843 ,
       0.77637289, 0.77636933]), 'split8_test_score': array([0.77169636, 0.7610957 , 0.73225759, 0.71144188, 0.5       ,
       0.78131501, 0.77909925, 0.77613534, 0.7735104 , 0.77206142,
       0.78220304, 0.78229793, 0.78226761, 0.78219938, 0.78208896,
       0.78207262, 0.78208001, 0.782097  , 0.78210138, 0.78210321,
       0.7820549 , 0.78205608, 0.782058  , 0.78205901, 0.78205645,
       0.78205517, 0.78205389, 0.78205462, 0.78205471, 0.78205572,
       0.78205252, 0.78205353, 0.78205417, 0.78205389, 0.78205316,
       0.7716949 , 0.781312  , 0.7821982 , 0.78206969, 0.78205727,
       0.78205088, 0.78205334]), 'split9_test_score': array([0.7532342 , 0.741896  , 0.7160009 , 0.68382177, 0.5       ,
       0.76245392, 0.76106628, 0.75860107, 0.75628583, 0.75549631,
       0.76316432, 0.76329981, 0.76336641, 0.76339202, 0.76335128,
       0.76291951, 0.76292367, 0.76293042, 0.76294069, 0.76297842,
       0.76286697, 0.76286697, 0.76286836, 0.7628679 , 0.76286901,
       0.76285282, 0.76285356, 0.7628555 , 0.76285661, 0.76285754,
       0.76285319, 0.76285282, 0.76285402, 0.76285476, 0.76285254,
       0.75323281, 0.76245762, 0.76316432, 0.76291368, 0.76286605,
       0.76285097, 0.7628555 ]), 'mean_test_score': array([0.76353895, 0.75149424, 0.72280794, 0.69646815, 0.5       ,
       0.77238825, 0.77027352, 0.76747578, 0.76492474, 0.76348625,
       0.77334281, 0.77334706, 0.77329429, 0.77316318, 0.77297923,
       0.77324395, 0.77324609, 0.77324765, 0.7732506 , 0.77325076,
       0.77322613, 0.77322651, 0.77322637, 0.77322622, 0.77322732,
       0.77322079, 0.77321966, 0.77322032, 0.77322024, 0.77322073,
       0.77322022, 0.77322047, 0.77322022, 0.77322047, 0.77321978,
       0.76353822, 0.77238716, 0.77334197, 0.7732431 , 0.77322834,
       0.7732214 , 0.77322123]), 'std_test_score': array([0.00690964, 0.00746811, 0.00892554, 0.00718526, 0.        ,
       0.00712756, 0.00723517, 0.00715293, 0.00714414, 0.00702942,
       0.00708095, 0.00709868, 0.00710347, 0.00711354, 0.00711449,
       0.00707992, 0.00708454, 0.00708921, 0.00709408, 0.00709341,
       0.00708072, 0.00708093, 0.00708127, 0.00708311, 0.0070836 ,
       0.00708446, 0.00708398, 0.007084  , 0.00708406, 0.0070842 ,
       0.00708384, 0.00708427, 0.00708375, 0.00708323, 0.00708397,
       0.0069091 , 0.00712591, 0.00707954, 0.00708301, 0.00708155,
       0.00708338, 0.00708307]), 'rank_test_score': array([36, 39, 40, 41, 42, 31, 33, 34, 35, 38,  2,  1,  4, 29, 30,  9,  8,
        7,  6,  5, 16, 13, 14, 15, 12, 19, 28, 23, 24, 20, 26, 22, 25, 21,
       27, 37, 32,  3, 10, 11, 17, 18], dtype=int32), 'split0_train_score': array([0.76277654, 0.74990281, 0.72507266, 0.69000588, 0.5       ,
       0.77226987, 0.76976734, 0.76657159, 0.76362711, 0.76195953,
       0.77378776, 0.77374737, 0.77363589, 0.77347579, 0.7732962 ,
       0.77381443, 0.77381602, 0.7738105 , 0.77381789, 0.7738235 ,
       0.77381708, 0.77381589, 0.77381479, 0.7738142 , 0.77381489,
       0.77381503, 0.77381474, 0.77381483, 0.77381489, 0.77381504,
       0.77381534, 0.77381458, 0.77381421, 0.7738143 , 0.77381455,
       0.76277593, 0.77226887, 0.77378766, 0.77382016, 0.77381613,
       0.77381662, 0.7738152 ]), 'split1_train_score': array([0.76687521, 0.75527562, 0.72688415, 0.70641287, 0.5       ,
       0.77636189, 0.7739702 , 0.77109347, 0.76843284, 0.76713405,
       0.77773145, 0.77768432, 0.77760415, 0.77746351, 0.77729016,
       0.77775418, 0.77775585, 0.77775246, 0.77774755, 0.77774788,
       0.77775214, 0.77775232, 0.77775226, 0.77775245, 0.77775289,
       0.77775042, 0.77775165, 0.77775174, 0.777752  , 0.77775191,
       0.77775053, 0.77775238, 0.77775043, 0.77775085, 0.77775038,
       0.76687604, 0.77636166, 0.77773376, 0.77775553, 0.77775285,
       0.77775241, 0.77775128]), 'split2_train_score': array([0.76413142, 0.75126166, 0.72243182, 0.69025392, 0.5       ,
       0.77337987, 0.77105964, 0.7681006 , 0.76542127, 0.76385253,
       0.77472829, 0.77470431, 0.77461761, 0.77447127, 0.77431865,
       0.77472102, 0.77472796, 0.77472404, 0.77472301, 0.77472837,
       0.77471752, 0.77471819, 0.7747193 , 0.77471808, 0.77471918,
       0.77471665, 0.77471695, 0.77471736, 0.77471722, 0.77471695,
       0.77471589, 0.77471763, 0.77471754, 0.77471683, 0.77471879,
       0.76413131, 0.77337978, 0.77472726, 0.77471976, 0.77471759,
       0.77471499, 0.77471907]), 'split3_train_score': array([0.762243  , 0.75028044, 0.72338364, 0.68800404, 0.5       ,
       0.77154541, 0.76936068, 0.76620504, 0.76375889, 0.76223819,
       0.77286252, 0.77281454, 0.77269835, 0.77254673, 0.77236087,
       0.7728445 , 0.77284786, 0.77284559, 0.77285131, 0.77285016,
       0.77283997, 0.77283974, 0.772841  , 0.77284147, 0.77284057,
       0.77284066, 0.77284086, 0.7728406 , 0.77284042, 0.77284026,
       0.77284085, 0.77284032, 0.77284031, 0.77283954, 0.77284005,
       0.7622386 , 0.77154634, 0.77286272, 0.77284724, 0.77284121,
       0.77284058, 0.77284235]), 'split4_train_score': array([0.76622719, 0.75354635, 0.72595124, 0.70399919, 0.5       ,
       0.77540514, 0.77310038, 0.77013021, 0.76709894, 0.7656313 ,
       0.77672076, 0.77668306, 0.77659706, 0.77645301, 0.7762697 ,
       0.77669568, 0.77670534, 0.77670481, 0.77670168, 0.7767029 ,
       0.77669418, 0.77669256, 0.77669308, 0.77669339, 0.77669208,
       0.77669377, 0.77669272, 0.77669268, 0.7766924 , 0.77669237,
       0.77669188, 0.77669227, 0.77669276, 0.77669196, 0.77669216,
       0.76622529, 0.77540505, 0.77672242, 0.77669548, 0.77669433,
       0.77669367, 0.77669381]), 'split5_train_score': array([0.76411051, 0.75162533, 0.720445  , 0.70482867, 0.5       ,
       0.77336162, 0.77117096, 0.7680447 , 0.76518405, 0.76368906,
       0.77467418, 0.77464579, 0.77456415, 0.77443332, 0.77427136,
       0.77467558, 0.77468024, 0.77468673, 0.77468671, 0.77469013,
       0.7746718 , 0.77467202, 0.77467254, 0.77467412, 0.77467401,
       0.77466919, 0.77466953, 0.77466988, 0.77466975, 0.77467047,
       0.77466891, 0.77466992, 0.77466989, 0.77467044, 0.77467047,
       0.76410998, 0.77336029, 0.77467181, 0.77467497, 0.77467143,
       0.77466994, 0.77467098]), 'split6_train_score': array([0.7665514 , 0.75423974, 0.72561514, 0.7040313 , 0.5       ,
       0.77555933, 0.77343502, 0.77076507, 0.76804364, 0.76640563,
       0.77668439, 0.77668388, 0.77659665, 0.77645496, 0.77630034,
       0.77665262, 0.77666599, 0.77667408, 0.77667669, 0.77667964,
       0.77664291, 0.7766441 , 0.77664411, 0.77664425, 0.77664504,
       0.77664288, 0.77664281, 0.77664272, 0.77664319, 0.77664299,
       0.77664309, 0.77664286, 0.77664313, 0.77664373, 0.77664283,
       0.76655062, 0.77555949, 0.77668288, 0.77665164, 0.77664307,
       0.77664325, 0.77664303]), 'split7_train_score': array([0.76272558, 0.74994048, 0.7223445 , 0.68793541, 0.5       ,
       0.77274588, 0.77032102, 0.76699913, 0.76385906, 0.7623547 ,
       0.77434391, 0.77431353, 0.77422377, 0.77408455, 0.77391031,
       0.77437714, 0.77437865, 0.77438608, 0.7743927 , 0.77438709,
       0.77437489, 0.7743734 , 0.7743758 , 0.77437805, 0.77437847,
       0.77437558, 0.77437593, 0.77437549, 0.77437562, 0.77437626,
       0.7743742 , 0.77437686, 0.77437545, 0.77437686, 0.77437534,
       0.76272489, 0.77274578, 0.77434305, 0.77437848, 0.7743761 ,
       0.77437639, 0.77437581]), 'split8_train_score': array([0.76266386, 0.75069354, 0.72220642, 0.6998253 , 0.5       ,
       0.77160855, 0.76923741, 0.76619862, 0.76372973, 0.76195959,
       0.7730067 , 0.77292267, 0.77281083, 0.77263876, 0.77243663,
       0.77303314, 0.77303482, 0.77303275, 0.77302973, 0.77302929,
       0.77302744, 0.77302637, 0.7730267 , 0.77302926, 0.77302785,
       0.77302735, 0.77302796, 0.77302795, 0.77302805, 0.77302795,
       0.77302714, 0.77302764, 0.77302751, 0.77302817, 0.77302772,
       0.76266305, 0.77160969, 0.77300567, 0.77302763, 0.77302813,
       0.77302371, 0.77302622]), 'split9_train_score': array([0.7662797 , 0.75379018, 0.72842594, 0.69290306, 0.5       ,
       0.7758421 , 0.77332848, 0.77041433, 0.76774707, 0.76627028,
       0.77740162, 0.77735723, 0.77725711, 0.77710959, 0.77690009,
       0.7774065 , 0.77740728, 0.77740723, 0.77740434, 0.77740125,
       0.77740183, 0.77740251, 0.77740341, 0.77740266, 0.77740166,
       0.77740244, 0.77740332, 0.7774031 , 0.77740311, 0.77740362,
       0.77740498, 0.77740298, 0.77740273, 0.77740418, 0.77740363,
       0.76627986, 0.77584123, 0.77739926, 0.77740626, 0.77740141,
       0.77740209, 0.77740236]), 'mean_train_score': array([0.76445844, 0.75205561, 0.72427605, 0.69681996, 0.5       ,
       0.77380797, 0.77147511, 0.76845228, 0.76569026, 0.76414949,
       0.77519416, 0.77515567, 0.77506056, 0.77491315, 0.77473543,
       0.77519748, 0.775202  , 0.77520243, 0.77520316, 0.77520402,
       0.77519397, 0.77519371, 0.7751943 , 0.77519479, 0.77519466,
       0.7751934 , 0.77519365, 0.77519363, 0.77519366, 0.77519378,
       0.77519328, 0.77519374, 0.7751934 , 0.77519369, 0.77519359,
       0.76445756, 0.77380782, 0.77519365, 0.77519771, 0.77519423,
       0.77519337, 0.77519401]), 'std_train_score': array([0.00175656, 0.00187883, 0.00236953, 0.00728205, 0.        ,
       0.00173526, 0.00173594, 0.00187236, 0.00186514, 0.00193539,
       0.0017109 , 0.00171851, 0.0017271 , 0.00173286, 0.00173435,
       0.00170542, 0.00170655, 0.00170727, 0.00170482, 0.00170461,
       0.00170501, 0.00170539, 0.00170526, 0.00170476, 0.00170485,
       0.00170494, 0.00170503, 0.00170503, 0.00170509, 0.0017051 ,
       0.00170521, 0.00170511, 0.00170497, 0.00170515, 0.00170493,
       0.00175718, 0.001735  , 0.00171121, 0.00170534, 0.00170485,
       0.00170555, 0.00170484])}
2020-12-06 - INFO - baseline_mock.py/nonnested_search_baseline - ended in 216.1 sec

